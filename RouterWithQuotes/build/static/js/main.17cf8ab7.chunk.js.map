{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","useRouteMatch","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","submitFormHandler","Comments","isAddingComment","setIsAddingComment","comments","HighlightedQuote","QuoteDetail","params","useParams","match","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.17cf8ab7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1XwpL\",\"loading\":\"QuoteForm_loading__Ydj06\",\"control\":\"QuoteForm_control__37QfA\",\"actions\":\"QuoteForm_actions__VKdOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2FMGM\",\"logo\":\"MainNavigation_logo__ejWeO\",\"nav\":\"MainNavigation_nav__2g_87\",\"active\":\"MainNavigation_active__t1QaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1cS3A\",\"loading\":\"NewCommentForm_loading__3w0D9\",\"control\":\"NewCommentForm_control__COaz_\",\"actions\":\"NewCommentForm_actions__1Zt96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2z5et\",\"sorting\":\"QuoteList_sorting__Y0ggm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3wkgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3t5RT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1Rmp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__39kMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__JKfx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3wk9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1ROUb\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const match = useRouteMatch();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push(\"/quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://router-with-quotes-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n      sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if(status === 'pending') {\r\n      return <div className=\"centered\">\r\n          <LoadingSpinner />\r\n      </div>\r\n  }\r\n\r\n  if(error){\r\n      return <p className=\"centered focused\">{error}</p>\r\n  }\r\n\r\n  if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n    return <NoQuotesFound/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={loadedQuotes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishedEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave? All your entered data will be lost!'}></Prompt>\n    <Card>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishedEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\nimport { useEffect } from 'react';\r\n\r\nconst NewQuote = () => {\r\n    const {sendRequest, status} =useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(status === 'completed'){\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n    \r\n    const addQuoteHandler= (quoteData) => {\r\n        sendRequest(quoteData);\r\n        history.push('/quotes')\r\n    }\r\n\r\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>;\r\n  };\r\n  \r\n  export default NewQuote;","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment } from 'react';\r\nimport { useParams, Route, useRouteMatch } from 'react-router-dom';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport { Link } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport { useEffect } from 'react';\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  {id: 'q1', author: 'Max', text: 'Learning React is fun!'},\r\n  {id: 'q2', author: 'Maxyy', text: 'Learning React is Great!'},\r\n];\r\n\r\n\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const {quoteId} = params;\r\n  const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\r\n\r\n \r\n  useEffect(()=> {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n\r\n  if(status === 'pending') {\r\n    return <div className='centered'>\r\n      <LoadingSpinner/>\r\n    </div>\r\n  }\r\n\r\n  if(error){\r\n    return <p className='centered'>{error}</p>\r\n  }\r\n\r\n  if(!loadedQuote.text){\r\n    return <p>No Quote found</p>\r\n  }\r\n\r\n  return <Fragment>\r\n    \r\n    <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}></HighlightedQuote>\r\n    <Route path={`/quotes/${params.quoteId}`} exact>\r\n    <div className='centered'>\r\n      <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\r\n    </div>\r\n    </Route>\r\n    \r\n    <Route path={`${match.path}/comments`}>\r\n      <Comments></Comments>\r\n    </Route>\r\n    </Fragment>\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n              {\" \"}\r\n              All Quotes{\" \"}\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n              {\" \"}\r\n              Add a Quotes{\" \"}\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from 'react/cjs/react.production.min';\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\nreturn <Fragment>\r\n<MainNavigation/>\r\n<main className={classes.main}>{props.children}</main>\r\n</Fragment>\r\n}\r\n\r\nexport default Layout;","\r\n\r\nconst NotFound = () => {\r\n    return <div className='centered'>\r\n        <p>404, page not found</p>\r\n    </div>\r\n}\r\n\r\nexport default NotFound;","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from './pages/NotFound'\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          {\" \"}\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path='*'><NotFound/></Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport ReactDom from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}